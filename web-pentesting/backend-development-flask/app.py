from flask import Flask, render_template, request, redirect, url_for
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///tasks.db'
db = SQLAlchemy(app)

class Task(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    content = db.Column(db.String(200), nullable=False)

@app.route('/', methods=['GET', 'POST'])
def home():
    if request.method == 'POST':
        new_task = request.form['task_name']
        new_task_obj = Task(content=new_task)
        db.session.add(new_task_obj)
        db.session.commit()
        return redirect(url_for('home'))
    
    elif request.method == 'GET':
        all_tasks = Task.query.all()
        return render_template('index.html', todo_list=all_tasks)
    
@app.route('/delete/<int:id>')
def delete_task(id):
    task_to_delete = Task.query.get_or_404(id)
    db.session.delete(task_to_delete)
    db.session.commit()
    return redirect(url_for('home'))

@app.route('/update/<int:id>', methods=['GET', 'POST'])
def update_task(id):
    task = Task.query.get_or_404(id)
    
    if request.method == 'POST':
        task.content = request.form['content']
        db.session.commit()
        return redirect(url_for('home'))
    elif request.method == 'GET':
        return render_template('update.html', task=task)

if __name__ == '__main__':
    app.run(debug=True)